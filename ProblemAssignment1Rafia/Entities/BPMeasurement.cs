
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Net.Http.Headers;
using System.Runtime.Serialization;

namespace ProblemAssignment1Rafia.Entities
{
    // A class of objects representing our primary domain entity and will
    // be mapped to rows in a DB
    public class BPMeasurement
    {
        // By virtue of an EF Core naming convention "ClassnameId" this
        // prop maps to the primary key in the DB table; also, because it
        // is of type int, it will be an autogenerated ID - i.e. the DB will generate them for us

        public int BPMeasurementId { get; set; }

        [Required(ErrorMessage = "Please add a systolic Value for the Measurement")]
        [Range(20,400, ErrorMessage = "Systolic value must be between 20 to 400")]
        public int SystolicValue { get; set; }

        [Required(ErrorMessage = "Please add a Diastolic Value for the Measurement")]
        [Range(10, 300, ErrorMessage = "Diastolic value must be between 10 to 300")]
        public int DiastolicValue { get; set; }

        public string GetCategory()
        {
            if (SystolicValue<120 && DiastolicValue<80)
            {
                return "Normal";
            }
            else if ((SystolicValue>=120 && SystolicValue<=129) && DiastolicValue < 80)
            {
                return "Elevated";
            } 
            else if ((SystolicValue>=130 && SystolicValue<=139) || (DiastolicValue>= 80 && DiastolicValue <= 89))
            {
                return "Hypertension Stage 1";
            } 
            else if ((SystolicValue>=140 && SystolicValue <= 180 ) || (DiastolicValue>=90 && DiastolicValue <= 120))
            {
                return "Hypertension Stage 2";
            }
            else if (SystolicValue>180 || DiastolicValue>120)
            {
                return "Hypertensive Crisis";
            }
            return "not Categorized";
        }

        //[Required(ErrorMessage = "Please add a measurement position during the Measurement")]
        //public string? Position { get; set; }
        [Required(ErrorMessage = "Please add a Date of the Measurement")]
        public DateTime? DateofReading { get; set; }


        //Setup FK relationship with Position by adding FK ref + the Full Position object:
        [Required(ErrorMessage = "Please select a position for this measurement")]
        public string? PositionId { get; set; }
        public Position? Position { get; set; }


    }
}
